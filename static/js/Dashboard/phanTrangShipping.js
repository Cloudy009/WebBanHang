// JavaScript code for pagination and progress bar
document.addEventListener('DOMContentLoaded', function() {
    const orders = [
        { id: '6152', arrival: '01/06/20', link: 'https://www.grasshoppers.lk/customers/action/track/V534HB', steps: 3, events: [
            { time: '2020-05-27 11:26:08 AM', location: 'Hồ Chí Minh', event: 'REQUEST CREATED' },
            { time: '2020-06-04 06:59:48 AM', location: 'Hà Nội', event: 'ATTEMPT 1 COMPLETED. ~ ***[AUTO GENERATED BY GRASSHOPPERS]***' },
            { time: '2020-06-04 06:59:48 AM', location: 'Đà Nẵng', event: 'RETURN TO VENDOR RECORD CREATED ~ RC806_118' }
        ]},
        { id: '6153', arrival: '01/07/20', link: 'https://www.grasshoppers.lk/customers/action/track/V534HC', steps: 3, events: [
            { time: '2020-05-28 11:26:08 AM', location: 'Hồ Chí Minh', event: 'REQUEST CREATED' },
            { time: '2020-06-05 06:59:48 AM', location: 'Hà Nội', event: 'ATTEMPT 1 COMPLETED. ~ ***[AUTO GENERATED BY GRASSHOPPERS]***' },
            { time: '2020-06-05 06:59:48 AM', location: 'Đà Nẵng', event: 'RETURN TO VENDOR RECORD CREATED ~ RC806_118' }
        ]},
        { id: '6154', arrival: '01/07/20', link: 'https://www.grasshoppers.lk/customers/action/track/V534HC', steps: 4, events: [
            { time: '2020-05-28 11:26:08 AM', location: 'Hồ Chí Minh', event: 'REQUEST CREATED' },
            { time: '2020-06-05 06:59:48 AM', location: 'Hà Nội', event: 'ATTEMPT 1 COMPLETED. ~ ***[AUTO GENERATED BY GRASSHOPPERS]***' },
            { time: '2020-06-05 06:59:48 AM', location: 'Đà Nẵng', event: 'RETURN TO VENDOR RECORD CREATED ~ RC806_118' }
        ]},
        // Add more orders as needed
    ];

    const rowsPerPage = 1;
    let currentPage = 1;

    function updateProgressBar(status, container) {
        const steps = container.querySelectorAll('.shipping-step');
        steps.forEach((step, index) => {
            if (index < status) {
                step.classList.add('active');
            } else {
                step.classList.remove('active');
            }
        });
    }

    function renderOrders(page) {
        const ordersContainer = document.getElementById('shipping-page');
        ordersContainer.innerHTML = '';
        const start = (page - 1) * rowsPerPage;
        const end = start + rowsPerPage;
        const paginatedOrders = orders.slice(start, end);

        paginatedOrders.forEach(order => {
            const orderHtml = `
                <div class="shipping-container d-grid gap-3">
                    <div class="card-shipping process-shipping">
                        <div class="shipping-row d-flex justify-content-between px-3 top order-identification">
                            <div class="d-flex graphic-cube padding-custom">
                                <h3>ORDER: <span class="text-primary font-weight-bold order-id">${order.id}</span></h3>
                            </div>
                            <div class="d-flex flex-column text-sm-right graphic-cube padding-custom">
                                <p class="my-0">Expected Arrival: <span>${order.arrival}</span></p>
                                <p class="my-0">Grasshoppers: <span class="font-weight-bold"><a href="${order.link}">${order.link.split('/').pop()}</a></span></p>
                            </div>
                        </div>
                        <div class="shipping-row d-flex justify-content-center">
                            <div class="col-12">
                                <ul id="process-bar" class="text-center">
                                    <li class="shipping-step" data-step="1"></li>
                                    <li class="shipping-step" data-step="2"></li>
                                    <li class="shipping-step" data-step="3"></li>
                                    <li class="shipping-step final-step" data-step="4"></li>
                                </ul>
                            </div>
                        </div>
                        <div class="shipping-row justify-content-around top d-flex">
                            <div class="shipping-row d-flex icon-container">
                                <i class="shipping-icon fa-solid fa-box-open"></i>
                                <div class="d-flex flex-column">
                                    <p class="font-weight-bold">Order<br>Preparation</p>
                                </div>
                            </div>
                            <div class="shipping-row d-flex icon-container">
                                <i class="shipping-icon fa-solid fa-right-to-bracket"></i>
                                <div class="d-flex flex-column">
                                    <p class="font-weight-bold">Complete<br>Packing</p>
                                </div>
                            </div>
                            <div class="shipping-row d-flex icon-container">
                                <i class="shipping-icon fa-solid fa-truck-fast"></i>
                                <div class="d-flex flex-column">
                                    <p class="font-weight-bold">Order<br>Shipping</p>
                                </div>
                            </div>
                            <div class="shipping-row d-flex icon-container">
                                <i class="shipping-icon fa-solid fa-circle-check"></i>                    
                                <div class="d-flex flex-column">
                                    <p class="font-weight-bold">Order<br>Delivering</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <h4 class="ml-3">Update: </h4>
                    <div class="card-shipping border-0">
                        <div class="table-container px-1">
                            <table class="table table-hover table-responsive">
                                <thead>
                                    <tr>
                                        <th class="fw-bolder px-10">Thời gian</th>
                                        <th class="fw-bold px-10">Địa điểm</th>
                                        <th class="fw-bold px-10">Sự kiện</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${order.events.map(event => `
                                        <tr>
                                            <td class="text-primary fw-bold px-10">${event.time}</td>
                                            <td class="fw-bold px-10">${event.location}</td>
                                            <td class="text-success fw-bold px-10">${event.event}</td>
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="text-center mb-3 h-10">
                        <button class="received-btn">Đã nhận hàng</button>
                    </div>
                </div>
            `;
            ordersContainer.insertAdjacentHTML('beforeend', orderHtml);
            const orderContainer = ordersContainer.lastElementChild;
            updateProgressBar(order.steps, orderContainer);
        });
    }

    function renderPagination() {
        const paginationContainer = document.getElementById('pagination-shipping');
        paginationContainer.innerHTML = '';
        const totalPages = Math.ceil(orders.length / rowsPerPage);

        for (let i = 1; i <= totalPages; i++) {
            const button = document.createElement('button');
            button.classList.add('pagination-button');
            button.textContent = i;
            if (i === currentPage) {
                button.classList.add('active');
            }
            button.addEventListener('click', () => {
                currentPage = i;
                renderOrders(currentPage);
                renderPagination();
            });
            paginationContainer.appendChild(button);
        }
    }

    renderOrders(currentPage);
    renderPagination();
});



