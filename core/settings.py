"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os, random, string
from pathlib import Path
from dotenv import load_dotenv
import str2bool

load_dotenv()  # take environment variables from .env.

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')
if not SECRET_KEY:
    SECRET_KEY = ''.join(random.choice( string.ascii_lowercase  ) for i in range( 32 ))

# Render Deployment Code
DEBUG = str2bool(os.environ.get('DEBUG'))

# HOSTs List
ALLOWED_HOSTS = ['*']
# Add here your deployment HOSTS
CSRF_TRUSTED_ORIGINS = ['http://localhost:8000','http://127.0.0.1:8000', 'http://localhost:5085', 'http://127.0.0.1:8000', 'http://127.0.0.1:5085', 'https://b250-171-253-138-54.ngrok-free.app', 'https://example.com', 'https://web-banhang-ujgw.onrender.com']

CORS_ALLOWED_ORIGINS = [
    'https://b250-171-253-138-54.ngrok-free.app',  # Thay thế với URL ngrok của bạn
    'https://web-banhang-ujgw.onrender.com'
]

RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:    
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)
    CSRF_TRUSTED_ORIGINS.append('https://' + RENDER_EXTERNAL_HOSTNAME)
    CORS_ALLOWED_ORIGINS.append('https://' + RENDER_EXTERNAL_HOSTNAME)
# Application definition
SITE_ID = 2

INSTALLED_APPS = [
    'axes',
    "daphne",
    'admin_soft.apps.AdminSoftDashboardConfig',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'django.contrib.humanize',
    'corsheaders',

    "home",
    "webhook",
    "accounts",

    "django.contrib.sites",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",

    'django_otp',
    'django_otp.plugins.otp_static',
    'django_otp.plugins.otp_totp',
    'two_factor',

    "social_django",

    "rest_framework",
    "API",
    "channels",
    "chatApp",
]

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        }
    },
    "github": {
        "SCOPE": [
            "user",
            "repo",
            "read:org",
        ],
        "AUTH_PARAMS": {
            "allow_signup": "true",
        }
    }
}

# Cấu hình channel layers (sử dụng Redis hoặc In-memory)
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}


MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",    
    "django.contrib.sessions.middleware.SessionMiddleware",
    'django.middleware.locale.LocaleMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.middleware.common.CommonMiddleware",
    'home.middleware.force_vietnamese.ForceVietnameseMiddleware',  # Thêm dòng này!

    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'allauth.account.middleware.AccountMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    'axes.middleware.AxesMiddleware',

]



ROOT_URLCONF = "core.urls"

HOME_TEMPLATES = os.path.join(BASE_DIR, 'templates')
VNPAY_TEMPLATES = os.path.join(HOME_TEMPLATES, 'vnpay')

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [HOME_TEMPLATES, VNPAY_TEMPLATES],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                'social_django.context_processors.backends',  # Add this line 
                'accounts.context_processors.social_auth_provider',

            ],
        },
    },
]

ASGI_APPLICATION = "core.asgi.application"

WSGI_APPLICATION = "core.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DB_ENGINE   = os.getenv('DB_ENGINE'   , None)
DB_USERNAME = os.getenv('DB_USERNAME' , None)
DB_PASS     = os.getenv('DB_PASS'     , None)
DB_HOST     = os.getenv('DB_HOST'     , None)
DB_PORT     = os.getenv('DB_PORT'     , None)
DB_NAME     = os.getenv('DB_NAME'     , None)

if DB_ENGINE and DB_NAME and DB_USERNAME:
    DATABASES = { 
      'default': {
        'ENGINE'  : 'django.db.backends.' + DB_ENGINE, 
        'NAME'    : DB_NAME,
        'USER'    : DB_USERNAME,
        'PASSWORD': DB_PASS,
        'HOST'    : DB_HOST,
        'PORT'    : DB_PORT,
        }, 
    }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

# Cài đặt ngôn ngữ mặc định
LANGUAGE_CODE = 'vi'

# Định dạng múi giờ Việt Nam
TIME_ZONE = 'Asia/Ho_Chi_Minh'

# Bật hỗ trợ dịch thuật
USE_I18N = True

# Bật hỗ trợ định dạng thời gian theo ngôn ngữ
USE_L10N = True

# Định dạng múi giờ
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

if not DEBUG:
   STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.github.GithubOAuth2',
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend", 
    'axes.backends.AxesStandaloneBackend',
)

# Google OAuth
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.getenv('SOCIAL_AUTH_GOOGLE_OAUTH2_KEY')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.getenv('SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET')
SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI = os.getenv('SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI')

# GitHub OAuth
SOCIAL_AUTH_GITHUB_KEY = os.getenv('SOCIAL_AUTH_GITHUB_KEY')
SOCIAL_AUTH_GITHUB_SECRET = os.getenv('SOCIAL_AUTH_GITHUB_SECRET')
SOCIAL_AUTH_GITHUB_REDIRECT_URI = os.getenv('SOCIAL_AUTH_GITHUB_REDIRECT_URI')
SOCIAL_AUTH_GITHUB_SCOPE = ['user:email']



SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'accounts.pipeline.get_or_create_user',  # Thay thế bước mặc định

    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',

)

AXES_FAILURE_LIMIT = 3  # Số lần đăng nhập thất bại tối đa
AXES_COOLOFF_TIME = 1  # Thời gian khóa tài khoản (tính bằng giờ)
AXES_LOCK_OUT_AT_FAILURE = True  # Khóa tài khoản ngay khi đạt giới hạn
AXES_RESET_ON_SUCCESS = True  # Đặt lại số lần thất bại khi đăng nhập thành công
AXES_USERNAME_FORM_FIELD = 'username'  # Tên trường người dùng trong form


AUTH_USER_MODEL = 'accounts.CustomUser'
SOCIAL_AUTH_USER_MODEL = 'accounts.CustomUser'

ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'


# # Đường dẫn xác nhận sau khi thay đổi mật khẩu thành công
# ACCOUNT_RESET_PASSWORD_URL = 'password-reset'
# ACCOUNT_PASSWORD_RESET_ON_GET = True  # Cho phép reset password ngay từ GET request

# # Đường dẫn để người dùng quay lại trang chủ sau khi reset mật khẩu
# ACCOUNT_PASSWORD_RESET_DONE_URL = '/accounts/password-reset-done/'

# Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587  # Sử dụng 587 cho TLS hoặc 465 cho SSL
EMAIL_USE_TLS = True  # Sử dụng True nếu sử dụng TLS, False nếu sử dụng SSL
EMAIL_USE_SSL = False  # Sử dụng True nếu sử dụng SSL, False nếu sử dụng TLS
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')
DEFAULT_TO_EMAIL = os.getenv('DEFAULT_TO_EMAIL')
# settings.py
LOGIN_URL = '/accounts/login'  # URL đến trang đăng nhập
LOGIN_REDIRECT_URL = '/shop'  # URL sau khi đăng nhập thành công

# dành cho thanh toán vnpay:
# VNPAY
VNPAY_RETURN_URL = os.getenv('VNPAY_RETURN_URL')
VNPAY_PAYMENT_URL = os.getenv('VNPAY_PAYMENT_URL')
VNPAY_API_URL = os.getenv('VNPAY_API_URL')
VNPAY_TMN_CODE = os.getenv('VNPAY_TMN_CODE')
VNPAY_HASH_SECRET_KEY = os.getenv('VNPAY_HASH_SECRET_KEY')

SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Sử dụng database để lưu session
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = False  # Sử dụng https
SESSION_COOKIE_AGE = 1209600  # Thời gian sống của session (2 tuần)
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Xóa session khi người dùng đóng trình duyệt

# SESSION_COOKIE_DOMAIN = 'e40d-113-172-142-32.ngrok-free.app'
# CSRF_COOKIE_DOMAIN = 'e40d-113-172-142-32.ngrok-free.app'
# APPEND_SLASH = False
